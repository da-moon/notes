#!/usr/bin/env bash
#-*-mode:sh;indent-tabs-mode:nil;tab-width:2;coding:utf-8-*-
# vi: ft=sh tabstop=2 shiftwidth=2 softtabstop=2 expandtab:
set -euo pipefail

# ─── INITIAL CHECKS AND SETUP ───────────────────────────────────────────────────

if ! command -- sudo -h > /dev/null 2>&1 ; then
  echo >&2 '*** Please install "sudo" package'
  exit 1
fi
if [[ $EUID -eq 0 ]]; then
  echo >&2 "*** You must run this script as non-root user with sudo permission." ;
  exit 1
fi
echo >&2 '*** running full system upgrade.';
sudo pacman --noconfirm -Syyu ;
echo >&2 "*** ensuring vagrant is installed.";
! pacman -Qi "vagrant" > /dev/null 2>&1 && sudo pacman -S --noconfirm vagrant  > /dev/null 2>&1 ;

# ─── PLUGIN INSTALL ─────────────────────────────────────────────────────────────

echo >&2 "*** ensuring vagrant-libvirt has the required build header files"
# https://github.com/hashicorp/vagrant/issues/12445#issuecomment-876254254
[ -r /opt/vagrant/embedded/include/ruby-3.0.0/ruby/st.h ] \
&& [ ! -r /opt/vagrant/embedded/include/ruby-3.0.0/st.h ] \
&& sudo ln -s /opt/vagrant/embedded/include/ruby-3.0.0/ruby/st.h /opt/vagrant/embedded/include/ruby-3.0.0/st.h
echo >&2 "*** ensuring vagrant-libvirt plugin is installed"
vagrant_plugins=($(vagrant plugin list | awk '{print $1}'))
[[ ! " ${vagrant_plugins[@]} " =~ " vagrant-libvirt " ]] \
  && vagrant plugin install vagrant-libvirt

# ─── TESTING THE PLUGIN ─────────────────────────────────────────────────────────

TMP_DIR=$(mktemp -p)
if [[ ! "$TMP_DIR" ]]; then
  echo >&2 "*** could not create temp dir"
  exit 1
fi
rm -rf "$TMP_DIR"
function cleanup {
  rm -rf "$TMP_DIR"
  echo "deleted temp working directory $TMP_DIR"
}
trap cleanup EXIT
git clone https://gist.github.com/9d2e81703701b8d2dbb3d8647d6b73e8.git "$TMP_DIR"
pushd ${TMP_DIR}
  vagrant destroy -f > /dev/null 2>&1 || true
  vagrant up --provider=libvirt
  vagrant destroy -f
popd
